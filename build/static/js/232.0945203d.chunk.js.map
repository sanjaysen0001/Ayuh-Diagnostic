{"version":3,"sources":["Diagnosticpages/Testview.js"],"names":["Testview","props","handleChange","event","setState","target","name","value","submitHandler","e","payload","categoryName","state","CategoryName","preventDefault","id","match","params","axiosConfig","put","then","response","Swal","fire","icon","title","text","confirmButtonColor","confirmButtonText","result","isConfirmed","history","push","catch","error","console","log","category","discountPrice","price","testName","errorMessage","this","get","datas","data","Test","className","col-sm-6","render","onClick","onSubmit","lg","md","sm","type","onChange","disabled","required","Component"],"mappings":"yXAyBaA,G,0CAAQ,kDACnB,WAAYC,GAAQ,IAAD,EASf,OATe,qBACjB,cAAMA,IAWRC,aAAe,SAACC,GACd,EAAKC,SAAS,eAAGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAClD,EACFC,cAAgB,SAACC,GACf,IAAMC,EAAU,CACdC,aAAc,EAAKC,MAAMC,cAE3BJ,EAAEK,iBACF,IAAMC,EAAO,EAAKd,MAAMe,MAAMC,OAAxBF,GACNG,IACGC,IAAI,6BAAD,OAA8BJ,GAAML,GACvCU,MAAK,SAACC,GACLC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,WACPC,KAAM,8BACNC,mBAAoB,UACpBC,kBAAmB,OAClBR,MAAK,SAACS,GACHA,EAAOC,aACT,EAAK7B,MAAM8B,QAAQC,KAAK,mBAI7BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAMb,cAnCtB,EAAKT,MAAQ,CACTyB,SAAU,GACVC,cAAc,GACdC,MAAM,GACNC,SAAS,GAEXC,aAAc,IACd,EAsOH,OArOA,8CA8BD,WAAqB,IAAD,OACZ1B,EAAO2B,KAAKzC,MAAMe,MAAMC,OAAxBF,GAENG,IAAYyB,IAAI,yBAAD,OAA0B5B,IACtCK,MAAK,SAACC,GAAc,IAAD,EACZuB,EAAgB,OAARvB,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUwB,YAAI,WAAN,EAAR,EAAgBC,KAC9B,EAAK1C,SAASwC,GACdT,QAAQC,IAAIQ,MAEbX,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAMb,eAEvB,oBAED,WACE,OACE,6BACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAAC0B,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIC,YAAA,EAASD,UAAU,cAAY,cAIrC,kBAAC,IAAG,KACF,kBAAC,QAAK,CACJE,OAAQ,gBAAGlB,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLgB,UAAU,8BACVG,QAAS,kBAAMnB,EAAQC,KAAK,WAAS,aAQ/C,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACe,UAAU,MAAMI,SAAUT,KAAKlC,eACnC,kBAAC,IAAG,KACF,kBAAC,IAAG,CAAC4C,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIP,UAAU,QAClC,kBAAC,IAAK,sBACN,kBAAC,IAAK,CACJQ,KAAK,OACLjD,KAAK,WACLC,MAAOmC,KAAK9B,MAAMyB,SAClBmB,SAAUd,KAAKxC,aACfuD,UAAQ,EACRC,UAAQ,KAGZ,kBAAC,IAAG,CAACN,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIP,UAAU,QAClC,kBAAC,IAAK,kBACN,kBAAC,IAAK,CACJQ,KAAK,OACLjD,KAAK,WACLC,MAAOmC,KAAK9B,MAAM4B,SAClBgB,SAAUd,KAAKxC,aACfuD,UAAQ,EACRC,UAAQ,KAGZ,kBAAC,IAAG,CAACN,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIP,UAAU,QAClC,kBAAC,IAAK,cACN,kBAAC,IAAK,CACJQ,KAAK,OACLjD,KAAK,QACLC,MAAOmC,KAAK9B,MAAM2B,MAClBiB,SAAUd,KAAKxC,aACfuD,UAAQ,EACRC,UAAQ,KAGZ,kBAAC,IAAG,CAACN,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIP,UAAU,QAClC,kBAAC,IAAK,uBACN,kBAAC,IAAK,CACJQ,KAAK,OACLjD,KAAK,gBACLC,MAAOmC,KAAK9B,MAAM0B,cAClBkB,SAAUd,KAAKxC,aACfuD,UAAQ,EACRC,UAAQ,cAsHzB,EAhPkB,CAASC,cAkPf3D,a","file":"static/js/232.0945203d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\n\r\nimport axiosConfig from \"../axiosConfig\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../assets/scss/plugins/extensions/editor.scss\";\r\nimport { data } from \"jquery\";\r\nexport class Testview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        category: \"\",\r\n        discountPrice:\"\",\r\n        price:\"\",\r\n        testName:\"\",\r\n\r\n      errorMessage: \"\", // For error handling\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    const payload = {\r\n      categoryName: this.state.CategoryName,\r\n    };\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .put(`/category/update-category/${id}`, payload)\r\n      .then((response) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success!\",\r\n          text: \"Category Edit successfully.\",\r\n          confirmButtonColor: \"#3085d6\",\r\n          confirmButtonText: \"OK\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.props.history.push(`/Category`);\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n\r\n    axiosConfig.get(`/test/view-test-by-id/${id}`)\r\n      .then((response) => {\r\n        const datas = response?.data?.Test;\r\n        this.setState(datas);\r\n        console.log(datas);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                View Test\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/Test\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Category Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.handleChange}\r\n                    disabled\r\n                    required\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Test Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"testName\"\r\n                    value={this.state.testName}\r\n                    onChange={this.handleChange}\r\n                    disabled\r\n                    required\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Price</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"price\"\r\n                    value={this.state.price}\r\n                    onChange={this.handleChange}\r\n                    disabled\r\n                    required\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Discount Price</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"discountPrice\"\r\n                    value={this.state.discountPrice}\r\n                    onChange={this.handleChange}\r\n                    disabled\r\n                    required\r\n                  ></Input>\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Image</Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"image\"\r\n                    value={this.state.Image}\r\n                    onChange={this.handleChange}\r\n                  ></Input>\r\n                </Col> */}\r\n                {/* \r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Product Category</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product Category</option>\r\n                    {this.state.categoryP?.map((allCategory) => (\r\n                      <option value={allCategory?._id} key={allCategory?._id}>\r\n                        {allCategory?.name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Price(MRP)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    placeholder=\"Enter price\"\r\n                    value={this.state.price}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>limit</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"limit\"\r\n                    placeholder=\"Enter limit\"\r\n                    value={this.state.limit}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Thumnail Image</Label>\r\n\r\n                  <Label>Image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    // multiple\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n\r\n                  <br />\r\n\r\n                  <Editor\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      inline: { inDropdown: true },\r\n                      list: { inDropdown: true },\r\n                      textAlign: { inDropdown: true },\r\n                      link: { inDropdown: true },\r\n                      history: { inDropdown: true },\r\n                      image: {\r\n                        uploadCallback: this.uploadImageCallBack,\r\n                        previewImage: true,\r\n                        alt: { present: true, mandatory: true },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n                */}\r\n              </Row>\r\n              {/*\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col>\r\n */}\r\n             \r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Testview;\r\n"],"sourceRoot":""}